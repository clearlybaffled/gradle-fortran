/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package io.github.clearlybaffled.gradle.nativeplugin.toolchain.plugins

import org.gradle.api.Project
import org.gradle.testfixtures.ProjectBuilder
import org.gradle.testkit.runner.GradleRunner
import org.junit.Rule
import org.junit.rules.TemporaryFolder

import spock.lang.Specification
import static org.gradle.testkit.runner.TaskOutcome.*


class GradleFortranPluginFunctionalTest extends Specification {
	@Rule TemporaryFolder testProjectDir = new TemporaryFolder()
	File buildFile

	def setup() {
		buildFile = testProjectDir.newFile('build.gradle')
		buildFile << """
            plugins {
                id 'io.github.clearlybaffled.fortran'
            }
        """
	}
	
    def "can run task"() {
        given:
		buildFile << """
		model {
			components {
				test(NativeExecutableSpec)
			}
		}
        """

        when:
        def result = GradleRunner.create()
        	.forwardOutput()
	        .withPluginClasspath()
	        .withArguments("assemble")
	        .withProjectDir(testProjectDir.root)
			.build()

        then:
        result.task(":assemble").outcome == SUCCESS
    }
	
	def "something else"() {
		Project project = ProjectBuilder.builder().withProjectDir(dir)build()
		File buildDir = project.buildDir
		File srcDir = new File(buildDir, 'src')
		srcDir.mkdirs()
		project.apply plugin: '' 
			
		
	}
}
